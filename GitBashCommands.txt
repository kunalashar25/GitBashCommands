## To initialize new .git project
> git init $projectName

## To check status of currect project
> git status

## To add individual files to Staged area
> git add $fileName

## To add all files to Staged area
> git add .

## To commit staged files on local branch
> git commit -m "$commitMessage"

-m		:  to provide commit message

## To view commit history of current branch
> git log

## To view diff changes in last git commit
> git show

## To view list of files that are tracked by git
> git ls-files

## To directly commit all modified files without performing staged operation
> git commit -a

## To unstage any file
> git reset HEAD $fileName

## To undo modified changes of a file
> git checkout -- $fileName

## To view decorated and single line git log
> git log --oneline --graph --decorate --all

--oneline	: to view everything on a single line.
--graph		: to view asterisk based graph denoting our branched hierarchy.
--decorate	: to view which commit are part of which branch.
--all		: to view history of all the branches available in repository.

## To create new alias in git
> git config --global alias.$aliasName "$gitCommand"

--global	: to configure on global level.

Example		: git config --global alias.history "log --oneline --graph --decorate --all"

## To call git alias
> git $aliasName

## To view list of all global parameters
> git config --global --list

## To view logs of a particular file
> git $aliasName -- $fileName

Example		: git history -- README.md

## To rename a file
> git mv $oldFileName $newFileName

## To add only updated files to staged area
> git add -u

## To add all modified files to to staged area
> git add -A

## To check difference in commit and HEAD
> git diff $commitId HEAD

## To check difference between any two commits
> git diff $commitId1 $commitId2

## To check difference between any two commits
> git diff $branchName1 $branchName2

## To view all branches
> git branch

## To checkout a new branch
> git checkout -b $branchName

-b		: to create and checkout a new branch

## To switch between branch
> git checkout $branchName

## To merge branch
> git merge $branchName

Note		: to merge newBranch with master branch, you need to switch to master branch first and then hit merge command.

## To delete a branch
> git branch -d $branchName

-d		: to delete a particular branch.

## To view merging conflicts in a file
> cat $fileName
